#!/usr/bin/env python
from email.MIMEText import MIMEText
from email.MIMEMultipart import MIMEMultipart
import argparse
import PCF8591 as ADC
import RPi.GPIO as GPIO
import time
import math
import smtplib

#Chooses pins. If your Pi is a Zero, you will need to modify these to fit.
Buzzer = 27
DO = 17
GPIO.setmode(GPIO.BCM)
msg = MIMEMultipart()

parser = argparse.ArgumentParser()
parser.add_argument("-e", "--selfmail", type=str, required=True, dest='selfdst',help="Put your email in here.") 
parser.add_argument("-p", "--password", type=str, required=True, dest='pwd', help="Put a password in here.")
parser.add_argument("-u", "--destmail", type=str, required=False, dest='dmail', help="A destination email, if it is different than the sending email.")
parsed = parser.parse_args()

selfdst = parsed.selfdst
pwd = parsed.pwd
dmail = parsed.dmail
#Figures out what email you are using to send.
if "gmail.com" in selfdst:
    server = smtplib.SMTP('smtp.gmail.com:587')
    server.ehlo()
if "hotmail.com" in selfdst:
    server = smtplib.SMTP('smtp-mail.outlook.com:587')
    server.ehlo()
if "yahoo.com" in selfdst:
    server = smtplib.SMTP('smtp.mail.yahoo.com:465')
    server.ehlo()
if "att.net" in selfdst:
    server = smptlib.SMTP('smtp.att.yahoo.com:465')
    server.ehlo()
#if "foo.bar" in selfdst:
    #server = smptlib.SMTP("foobarsmtp.com:port")
    #server.ehlo()

server.starttls()
server.login(selfdst, pwd)
fromaddr = selfdst
if dmail is None:
    toaddr = selfdst
else:
    toaddr = dmail
        
#Defines setup of program with pin addresses.
def setup():
	ADC.setup(0x48)
	GPIO.setup(DO, GPIO.IN)
        GPIO.setup(Buzzer, GPIO.LOW)
        GPIO.output(Buzzer, GPIO.HIGH)
        GPIO.output(Buzzer, GPIO.LOW)
        time.sleep(1)
        GPIO.output(Buzzer, GPIO.HIGH)
#Defines destroy, AKA make the buzzer stop if cancelled.
def destroy():
    GPIO.output(Buzzer, GPIO.HIGH)
    GPIO.cleanup()
#Basically main, but in a loop thingy and named mein... I want lo mein now.
def mein():
	status = 1
	while True:
            print ADC.read(0)
            if ADC.read(0) < 133:
                #Sends message.
                print("FIRE FIRE FIRE!")
                msg['From'] = fromaddr 
                msg['To'] = toaddr
                msg['Subject'] = "FIRE DETECTED!"
                
                body = "A fire has been detected. Please call local authorities! This email is only sent once, per SMTP rules. However, this does NOT mean a false alarm."
                msg.attach(MIMEText(body, 'plain'))
                #server.login(selfdst, pwd)
                text = msg.as_string()
                server.sendmail(fromaddr, toaddr, text)
                server.quit()
                GPIO.output(Buzzer, GPIO.LOW)
                print("SMTP gets pissy if we send something too fast.")
                time.sleep(100)
                GPIO.output(Buzzer, GPIO.HIGH)
            time.sleep(.7)

#Main/sequence of events.
if __name__ == '__main__':
	try:
		setup()
		mein()
	except KeyboardInterrupt: 
		pass
                destroy()
